{"version":3,"sources":["components/About.jsx","components/AddTask.jsx","components/Footer.jsx","components/Button.jsx","components/Header.jsx","components/Task.jsx","components/Tasks.jsx","App.js","reportWebVitals.js","index.js"],"names":["About","to","AddTask","onAdd","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","checked","currentTarget","Footer","year","Date","getFullYear","Button","color","onClick","style","backgroundColor","defaultProps","Header","title","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","onDoubleClick","id","cursor","Tasks","tasks","map","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updtTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.697c9d56.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to='/'>Go back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert('Type something to add to task!');\r\n      return\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n    setText('');\r\n    setDay('');\r\n    setReminder(false);\r\n  }\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit} >\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input \r\n          type='text' \r\n          value={text} \r\n          onChange={(e) => setText(e.target.value)} \r\n          placeholder='Add Task' \r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day and Time</label>\r\n        <input \r\n          type='text' \r\n          placeholder='Add day and time' \r\n          value={day} \r\n          onChange={(e) => setDay(e.target.value)} \r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input \r\n          type='checkbox' \r\n          checked={reminder}\r\n          value={reminder} \r\n          onChange={(e) => setReminder(e.currentTarget.checked)} \r\n        />\r\n      </div>\r\n\r\n      <input \r\n      type='submit' \r\n      value='Save Task' \r\n      className='btn btn-block' \r\n    />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  let year = new Date().getFullYear();\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; {year}</p>\r\n      <Link to='/about'>About</Link>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button style={{ backgroundColor: color }} onClick={onClick} className='btn'>\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n}\r\n\r\nexport default Button;","import { useLocation } from \"react-router-dom\"\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      {location.pathname === '/' && <Button \r\n        color={showAdd ? 'red' : 'green'} \r\n        text={showAdd ? 'Close' : 'Add'} \r\n        onClick={onAdd} />\r\n      }\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n      <h3>{task.text}{' '} \r\n        <FaTimes \r\n          style={{ color: 'red', cursor: 'pointer' }} \r\n          onClick={() => onDelete(task.id)}\r\n        /></h3>\r\n      <p>{task.day}</p>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n     {\r\n       tasks.map((task) => (\r\n        <Task \r\n          key={task.id} \r\n          task={task} \r\n          onDelete={onDelete} \r\n          onToggle={onToggle}  \r\n        />\r\n       ))\r\n     } \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState, useEffect } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport About from './components/About';\n\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n    getTasks();\n  }, [])\n\n  //fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }\n\n  //fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }\n\n  //Add task\n  const addTask = async (task) => {\n    const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000 + 1);\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  }\n\n  //Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter((task) => task.id !== id));\n  }\n\n  //Toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updtTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updtTask)\n    });\n\n    const data = await res.json();\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n  }\n  return (\n    <div className=\"container\">\n      <Header \n        onAdd={() => setShowAddTask(!showAddTask)} \n        title={'Tasks Tracker'} \n        showAdd={showAddTask}  \n      />\n      \n      <Route path='/' exact render={(props) => (\n        <>\n          {showAddTask && <AddTask onAdd={addTask} />}\n      {\n        tasks.length > 0 ? \n        <Tasks \n          tasks={tasks} \n          onDelete={deleteTask} \n          onToggle={toggleReminder}\n        /> : \n        'No tasks to show!'\n      }\n        </>\n      )} />\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}